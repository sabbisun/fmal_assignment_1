#include <iostream>
#include <stack>
#include <map>
#include <string>
#include <sstream>
#include <cstdlib>

using namespace std;

int getCmd(string str)
{
    if(str == "PUSH")
    {
        return 0;
    }
    else if(str == "ADD")
    {
        return 1;
    }
    else if(str == "SUB")
    {
        return 2;
    }
    else if(str == "MULT")
    {
        return 3;
    }
    else if(str == "ASSIGN")
    {
        return 4;
    }
    else if(str == "PRINT")
    {
        return 5;
    }

    cout << "Error for operator: " << str << endl;

    return -1;
}

int stringToInt(string str)
{
    istringstream ss(str);
    int result;
    return ss >> result ? result : 0;
}

string intToString(int n)
{
    ostringstream ss;
    ss << n;
    return ss.str();
}

string checkIfVar(string str,map<string,string> &variables)
{
    string temp = str;
    if(variables.count(str)>0)
    {
        str = variables[str];
    }
    //cout << temp << "=" << str << endl;
    return str;
}

void doAction(int action, stack<string> &inputStack, map<string,string> &variables)
{
    string str1;
    string str2;

    switch(action)
    {
        case 0:     /// Push
            cin >> str1;
            inputStack.push(str1);
            break;
        case 1:     /// Add
            str1 = inputStack.top();
            inputStack.pop();
            str2 = inputStack.top();
            inputStack.pop();
            if(variables.count(str1)>0)

            str1 = checkIfVar(str1,variables);
            str2 = checkIfVar(str2,variables);

            inputStack.push(intToString(stringToInt(str1)+stringToInt(str2)));
            break;
        case 2:     /// Sub
            str1 = inputStack.top();
            inputStack.pop();
            str2 = inputStack.top();
            inputStack.pop();

            str1 = checkIfVar(str1,variables);
            str2 = checkIfVar(str2,variables);

            inputStack.push(intToString(stringToInt(str2)-stringToInt(str1)));
            break;
        case 3:     /// Mult
            str1 = inputStack.top();
            inputStack.pop();
            str2 = inputStack.top();
            inputStack.pop();

            str1 = checkIfVar(str1,variables);
            str2 = checkIfVar(str2,variables);

            inputStack.push(intToString(stringToInt(str1)*stringToInt(str2)));

            break;
        case 4:     /// Assign
            str1 = inputStack.top();
            inputStack.pop();
            str2 = inputStack.top();
            inputStack.pop();
            str1 = checkIfVar(str1,variables);

            variables[str2] = str1;

            break;
        case 5:
            if(!inputStack.empty())
            {
                str1 = inputStack.top();
                str1 = checkIfVar(str1,variables);

                cout << str1 << endl;
            }
            break;
            default:
                cout << "Error" << endl;

    }
}

int main()
{
    string input;
    stack<string> inputStack;
    map<string,string> variables;

    while(cin >> input)
    {
        if(input == "Syntax")
        {
            cin >> input;
            if(input == "error!")
            {
                return -1;
            }
        }
        else
        {
            int action = getCmd(input);
            if(action < 0)
            {
                return -1;
            }
            doAction(action,inputStack,variables);
        }
    }

    return 0;
}
